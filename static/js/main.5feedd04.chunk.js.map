{"version":3,"sources":["components/message/message.js","components/send/send.js","components/chat/socket.js","components/chat/chat.js","reportWebVitals.js","index.js"],"names":["Message","item","currentUser","classMessage","user","className","text","Send","value","onChange","onSend","onSubmit","type","socket","io","process","Chat","state","messages","message","isLoggedIn","users","changeName","event","setState","target","inputName","trim","length","emit","sendMessage","preventDefault","changeMessage","this","on","data","newMessages","shift","id","shortid","generate","map","Object","values","i","placeholder","for","onClick","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5feedd04.chunk.js","sourcesContent":["import './message.css'\n\nconst Message = ({ item, currentUser }) => {\n  const classMessage =\n    item.user === currentUser ? 'alert alert-primary' : 'alert alert-dark'\n  return (\n    <div className=\"message-container\">\n      <span className={classMessage}>\n        {item.user}: {item.text}\n      </span>\n    </div>\n  )\n}\n\nexport default Message\n","const Send = ({ value, onChange, onSend }) => {\n  return (\n    <form className=\"input-group mb-3\" onSubmit={onSend}>\n      <input className=\"form-control\" value={value} onChange={onChange} />\n      <button className=\"btn btn-primary\" type=\"submit\">\n        Send\n      </button>\n    </form>\n  );\n};\n\nexport default Send;\n","import io from 'socket.io-client'\nconst URL = process.env.REACT_APP_URL || 'localhost:5000'\n\nexport const socket = io(URL)\n","import React, { PureComponent } from \"react\";\nimport Message from \"../message\";\nimport Send from \"../send\";\nimport \"./chat.css\";\nimport { socket } from \"./socket\";\nimport shortid from \"shortid\";\n\nclass Chat extends PureComponent {\n  socket = socket;\n  state = {\n    currentUser: \"\",\n    messages: [],\n    message: \"\",\n    isLoggedIn: false,\n    users: {},\n  };\n\n  componentDidMount() {\n    this.socket.on(\"message\", (data) => {\n      if (this.state.isLoggedIn) {\n        this.setState(({ messages }) => {\n          const newMessages = [...messages];\n          if (newMessages.length > 10) {\n            newMessages.shift();\n          }\n          return {\n            messages: [\n              ...newMessages,\n              { user: data.user, text: data.message, id: shortid.generate() },\n            ],\n          };\n        });\n      }\n    });\n    this.socket.on(\"users\", (data) => {\n      // const usersData = { ...data };\n      // console.log(usersData);\n      this.setState({ users: data });\n    });\n  }\n\n  changeName = (event) => {\n    this.setState({ currentUser: event.target.value });\n  };\n\n  inputName = () => {\n    const user = this.state.currentUser;\n    if (user.trim().length > 0) {\n      this.socket.emit(\"change:name\", user);\n      this.setState({ isLoggedIn: true });\n    }\n  };\n\n  sendMessage = (event) => {\n    event.preventDefault();\n    const { currentUser, message } = this.state;\n    if (message.trim().length > 0) {\n      this.socket.emit(\"message\", {\n        user: currentUser,\n        message: message.trim(),\n      });\n      this.setState({ message: \"\" });\n    }\n  };\n\n  changeMessage = (event) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    const { message, messages, currentUser, isLoggedIn, users } = this.state;\n    if (!isLoggedIn) {\n      return (\n        <main className=\"form-signin\">\n          <h4 className=\"form-floating mb-3\">Introduce yourself, please</h4>\n          <div className=\"form-floating mb-3\">\n            <input\n              className=\"form-control\"\n              value={currentUser}\n              onChange={this.changeName}\n              placeholder=\"Enter Your Nickname\"\n              id=\"floatingInput\"\n            />\n            <label for=\"floatingInput\">Nickname</label>\n          </div>\n          <button\n            className=\"w-100 btn btn-lg btn-primary\"\n            onClick={this.inputName}\n          >\n            Enter chat\n          </button>\n        </main>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row align-items-start\">\n          <div className=\"message-list col-md-9\">\n            <Send\n              value={message}\n              onChange={this.changeMessage}\n              onSend={this.sendMessage}\n            />\n            <div className=\"messages\">\n              {messages.map((item) => {\n                const { id } = item;\n\n                return (\n                  <Message item={item} currentUser={currentUser} key={id} />\n                );\n              })}\n            </div>\n          </div>\n          <ul className=\"list-group col-md-3\">\n            {Object.values(users).map((user, i) => {\n              return (\n                <li className=\"list-group-item\" key={i}>\n                  {user}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Chat from './components/chat'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chat />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}